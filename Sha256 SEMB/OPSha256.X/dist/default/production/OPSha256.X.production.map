Microchip MPLAB XC8 Compiler V1.45 ()

Linker command line:

-W-3 --edf=C:\Program Files (x86)\Microchip\xc8\v1.45\dat\en_msgs.txt -cs \
  -h+dist/default/production\OPSha256.X.production.sym \
  --cmf=dist/default/production\OPSha256.X.production.cmf -z -Q18F4550 \
  -oC:\Users\GUILHE~1\AppData\Local\Temp\s8hk.2 \
  -Mdist/default/production/OPSha256.X.production.map -E1 -ver=XC8 \
  -ASTACK=02C4h-07ffh -pstack=STACK -ACODE=00h-07FFFh -ACONST=00h-07FFFh \
  -ASMALLCONST=0800h-08FFhx120 -AMEDIUMCONST=0800h-07FFFh -ACOMRAM=01h-05Fh \
  -AABS1=00h-07FFh -ABIGRAM=01h-07FFh -ARAM=060h-0FFh,0100h-01FFhx7 \
  -ABANK0=060h-0FFh -ABANK1=0100h-01FFh -ABANK2=0200h-02FFh \
  -ABANK3=0300h-03FFh -ABANK4=0400h-04FFh -ABANK5=0500h-05FFh \
  -ABANK6=0600h-06FFh -ABANK7=0700h-07FFh -ASFR=0F60h-0FFFh \
  -preset_vec=00h,intcode,intcodelo,powerup,init -pramtop=0800h \
  -psmallconst=SMALLCONST -pmediumconst=MEDIUMCONST -pconst=CONST \
  -AFARRAM=00h-00h -ACONFIG=0300000h-030000Dh -pconfig=CONFIG \
  -AIDLOC=0200000h-0200007h -pidloc=IDLOC -AEEDATA=0F00000h-0F000FFh \
  -peeprom_data=EEDATA \
  -prdata=COMRAM,nvrram=COMRAM,nvbit=COMRAM,rbss=COMRAM,rbit=COMRAM \
  -pfarbss=FARRAM,fardata=FARRAM,nvFARRAM=FARRAM \
  -pintsave_regs=BIGRAM,bigbss=BIGRAM,bigdata=BIGRAM -pbss=RAM \
  -pidata=CODE,irdata=CODE,ibigdata=CODE,ifardata=CODE -prparam=COMRAM \
  C:\Users\GUILHE~1\AppData\Local\Temp\s8hk.obj \
  dist/default/production\OPSha256.X.production.obj 

Object code version is 3.11

Machine type is 18F4550

Call graph: (short form)




                Name                               Link     Load   Length Selector   Space Scale
C:\Users\GUILHE~1\AppData\Local\Temp\s8hk.obj
                init                                  0        0        4        0       0
                idloc                            200000   200000        8   200000       0
                config                           300000   300000        E   300000       0
dist/default/production\OPSha256.X.production.obj
                mediumconst                        7EB6     7EB6      14A     3F5B       0
                text19                             6AF2     6AF2       AE     3579       0
                text18                             697A     697A       78     34BD       0
                text17                             6D7A     6D7A      1AC     36BD       0
                text16                             6BA0     6BA0       E6     35D0       0
                text15                             6C86     6C86       F4     3643       0
                text14                             69F2     69F2       7A     34F9       0
                text13                             66A2     66A2        C     3351       0
                text12                             680A     680A       52     3405       0
                text11                             6774     6774       46     33BA       0
                text10                             6712     6712       2C     3389       0
                text9                              6F26     6F26      244     3793       0
                text8                              68AE     68AE       62     3457       0
                text7                              6910     6910       6A     3488       0
                text6                              73B2     73B2      B04     39D9       0
                text5                              685C     685C       52     342E       0
                text4                              66EC     66EC       26     3376       0
                text3                              66AE     66AE       1E     3357       0
                text2                              716A     716A      248     38B5       0
                text1                              67BA     67BA       50     33DD       0
                text0                              6A6C     6A6C       86     3536       0
                cstackCOMRAM                          1        1       3F        1       1
                cstackBANK0                          60       60       8E       60       1
                cstackBANK1                         100      100      100      100       1
                cstackBANK2                         200      200       83      200       1
                bssBANK2                            283      283       41      200       1
                dataCOMRAM                           40       40       20        1       1
                cinit                              673E     673E       36     339F       0
                idataCOMRAM                        66CC     66CC       20     66CC       0

TOTAL           Name                               Link     Load   Length     Space
        CLASS   STACK          

        CLASS   CODE           
                init                                  0        0        4         0
                text19                             6AF2     6AF2       AE         0
                text18                             697A     697A       78         0
                text17                             6D7A     6D7A      1AC         0
                text16                             6BA0     6BA0       E6         0
                text15                             6C86     6C86       F4         0
                text14                             69F2     69F2       7A         0
                text13                             66A2     66A2        C         0
                text12                             680A     680A       52         0
                text11                             6774     6774       46         0
                text10                             6712     6712       2C         0
                text9                              6F26     6F26      244         0
                text8                              68AE     68AE       62         0
                text7                              6910     6910       6A         0
                text6                              73B2     73B2      B04         0
                text5                              685C     685C       52         0
                text4                              66EC     66EC       26         0
                text3                              66AE     66AE       1E         0
                text2                              716A     716A      248         0
                text1                              67BA     67BA       50         0
                text0                              6A6C     6A6C       86         0
                cinit                              673E     673E       36         0
                idataCOMRAM                        66CC     66CC       20         0

        CLASS   CONST          

        CLASS   SMALLCONST     

        CLASS   MEDIUMCONST    
                mediumconst                        7EB6     7EB6      14A         0

        CLASS   COMRAM         
                cstackCOMRAM                          1        1       3F         1
                dataCOMRAM                           40       40       20         1

        CLASS   ABS1           

        CLASS   BIGRAM         

        CLASS   RAM            

        CLASS   BANK0          
                cstackBANK0                          60       60       8E         1

        CLASS   BANK1          
                cstackBANK1                         100      100      100         1

        CLASS   BANK2          
                cstackBANK2                         200      200       83         1
                bssBANK2                            283      283       41         1

        CLASS   BANK3          

        CLASS   BANK4          

        CLASS   BANK5          

        CLASS   BANK6          

        CLASS   BANK7          

        CLASS   SFR            

        CLASS   FARRAM         

        CLASS   CONFIG         
                config                           300000   300000        E         0

        CLASS   IDLOC          
                idloc                            200000   200000        8         0

        CLASS   EEDATA         



SEGMENTS        Name                           Load    Length   Top    Selector   Space  Class

                reset_vec                      000000  000004  000004         0       0  CODE    
                cstackCOMRAM                   000001  00005F  000060         1       1  COMRAM  
                cstackBANK0                    000060  00008E  0000EE        60       1  BANK0   
                cstackBANK1                    000100  000100  000200       100       1  BANK1   
                cstackBANK2                    000200  0000C4  0002C4       200       1  BANK2   
                text13                         0066A2  00000C  0066AE      3351       0  CODE    
                text3                          0066AE  00001E  0066CC      3357       0  CODE    
                idataCOMRAM                    0066CC  000020  0066EC      66CC       0  CODE    
                text4                          0066EC  000026  006712      3376       0  CODE    
                text10                         006712  00002C  00673E      3389       0  CODE    
                cinit                          00673E  000036  006774      339F       0  CODE    
                text11                         006774  000046  0067BA      33BA       0  CODE    
                text1                          0067BA  000050  00680A      33DD       0  CODE    
                text12                         00680A  000052  00685C      3405       0  CODE    
                text5                          00685C  000052  0068AE      342E       0  CODE    
                text8                          0068AE  000062  006910      3457       0  CODE    
                text7                          006910  00006A  00697A      3488       0  CODE    
                text18                         00697A  000078  0069F2      34BD       0  CODE    
                text14                         0069F2  00007A  006A6C      34F9       0  CODE    
                text0                          006A6C  000086  006AF2      3536       0  CODE    
                text19                         006AF2  0000AE  006BA0      3579       0  CODE    
                text16                         006BA0  0000E6  006C86      35D0       0  CODE    
                text15                         006C86  0000F4  006D7A      3643       0  CODE    
                text17                         006D7A  0001AC  006F26      36BD       0  CODE    
                text9                          006F26  000244  00716A      3793       0  CODE    
                text2                          00716A  000248  0073B2      38B5       0  CODE    
                text6                          0073B2  000B04  007EB6      39D9       0  CODE    
                mediumconst                    007EB6  00014A  008000      3F5B       0  MEDIUMCO
                idloc                          200000  000008  200008    200000       0  IDLOC   
                config                         300000  00000E  30000E    300000       0  CONFIG  


UNUSED ADDRESS RANGES

        Name                Unused          Largest block    Delta
        BANK0            0000EE-0000FF               12
        BANK2            0002C4-0002FF               3C
        BANK3            000300-0003FF              100
        BANK4            000400-0004FF              100
        BANK5            000500-0005FF              100
        BANK6            000600-0006FF              100
        BANK7            000700-0007FF              100
        BIGRAM           0000EE-0000FF               12
                         0002C4-0007FF              53C
        CODE             000004-0066A1             669E
        CONST            000004-0066A1             669E
        EEDATA           F00000-F000FF              100
        MEDIUMCONST      000800-0066A1             5EA2
        RAM              0000EE-0000FF               12
                         0002C4-0007FF              100
        SFR              000F60-000FFF               A0
        SMALLCONST       000800-0066A1              100
        STACK            0002C4-0007FF              53C

                                  Symbol Table

?___altoft                 cstackCOMRAM 000009
?___ftadd                  cstackCOMRAM 000022
?___ftdiv                  cstackCOMRAM 000013
?___ftpack                 cstackCOMRAM 000001
?___fttol                  cstackCOMRAM 000001
?___lwdiv                  cstackCOMRAM 000001
?___wmul                   cstackCOMRAM 000001
?_calc_chunk               cstackCOMRAM 00000C
?_rotate_right             cstackCOMRAM 000001
?_sprintf                  cstackCOMRAM 000008
USART_Init@baud_rate       cstackCOMRAM 00002E
USART_Init@temp            cstackCOMRAM 000032
USART_SendString@out       cstackCOMRAM 000002
USART_TxChar@out           cstackCOMRAM 000001
_RCSTA                     (abs)        000FAB
_SPBRG                     (abs)        000FAF
_TRISC6                    (abs)        007CA6
_TRISC7                    (abs)        007CA7
_TXIF                      (abs)        007CF4
_TXREG                     (abs)        000FAD
_TXSTA                     (abs)        000FAC
_USART_Init                text14       0069F2
_USART_SendString          text12       00680A
_USART_TxChar              text13       0066A2
__CFG_BORV$3               (abs)        000000
__CFG_FOSC$HS              (abs)        000000
__CFG_IESO$OFF             (abs)        000000
__CFG_LPT1OSC$OFF          (abs)        000000
__CFG_LVP$OFF              (abs)        000000
__CFG_MCLRE$OFF            (abs)        000000
__CFG_PBADEN$OFF           (abs)        000000
__CFG_PWRT$OFF             (abs)        000000
__CFG_STVREN$ON            (abs)        000000
__CFG_WDT$OFF              (abs)        000000
__CFG_WDTPS$32768          (abs)        000000
__HRAM                     (abs)        000000
__Habs1                    abs1         000000
__Hbank0                   bank0        000000
__Hbank1                   bank1        000000
__Hbank2                   bank2        000000
__Hbank3                   bank3        000000
__Hbank4                   bank4        000000
__Hbank5                   bank5        000000
__Hbank6                   bank6        000000
__Hbank7                   bank7        000000
__Hbigbss                  bigbss       000000
__Hbigdata                 bigdata      000000
__Hbigram                  bigram       000000
__Hbss                     bss          000000
__HbssBANK2                bssBANK2     000000
__Hcinit                   cinit        000000
__Hclrtext                 clrtext      000000
__Hcomram                  comram       000000
__Hconfig                  config       30000E
__Hconst                   const        000000
__HcstackBANK0             cstackBANK0  000000
__HcstackBANK1             cstackBANK1  000000
__HcstackBANK2             cstackBANK2  000000
__HcstackCOMRAM            cstackCOMRAM 000000
__Hdata                    data         000000
__HdataCOMRAM              dataCOMRAM   000000
__Heeprom_data             eeprom_data  000000
__Hfarbss                  farbss       000000
__Hfardata                 fardata      000000
__Hibigdata                ibigdata     000000
__Hidata                   idata        000000
__HidataCOMRAM             idataCOMRAM  000000
__Hidloc                   idloc        200008
__Hifardata                ifardata     000000
__Hinit                    init         000004
__Hintcode                 intcode      000000
__Hintcode_body            intcode_body 000000
__Hintcodelo               intcodelo    000000
__Hintentry                intentry     000000
__Hintret                  intret       000000
__Hintsave_regs            intsave_regs 000000
__Hirdata                  irdata       000000
__Hmediumconst             mediumconst  008000
__HnvFARRAM                nvFARRAM     000000
__Hnvbit                   nvbit        000000
__Hnvrram                  nvrram       000000
__Hparam                   rparam       000000
__Hpowerup                 powerup      000000
__Hram                     ram          000000
__Hramtop                  ramtop       000800
__Hrbit                    rbit         000000
__Hrbss                    rbss         000000
__Hrdata                   rdata        000000
__Hreset_vec               reset_vec    000000
__Hrparam                  rparam       000000
__Hsfr                     sfr          000000
__Hsmallconst              smallconst   000000
__Hspace_0                 (abs)        30000E
__Hspace_1                 (abs)        0002C4
__Hspace_2                 (abs)        000000
__Hstack                   stack        000000
__Hstruct                  struct       000000
__Htemp                    temp         000000
__Htext                    text         000000
__Htext0                   text0        000000
__Htext1                   text1        000000
__Htext10                  text10       000000
__Htext11                  text11       000000
__Htext12                  text12       000000
__Htext13                  text13       000000
__Htext14                  text14       000000
__Htext15                  text15       000000
__Htext16                  text16       000000
__Htext17                  text17       000000
__Htext18                  text18       000000
__Htext19                  text19       000000
__Htext2                   text2        000000
__Htext3                   text3        000000
__Htext4                   text4        000000
__Htext5                   text5        000000
__Htext6                   text6        000000
__Htext7                   text7        000000
__Htext8                   text8        000000
__Htext9                   text9        000000
__LRAM                     (abs)        000001
__Labs1                    abs1         000000
__Lbank0                   bank0        000000
__Lbank1                   bank1        000000
__Lbank2                   bank2        000000
__Lbank3                   bank3        000000
__Lbank4                   bank4        000000
__Lbank5                   bank5        000000
__Lbank6                   bank6        000000
__Lbank7                   bank7        000000
__Lbigbss                  bigbss       000000
__Lbigdata                 bigdata      000000
__Lbigram                  bigram       000000
__Lbss                     bss          000000
__LbssBANK2                bssBANK2     000000
__Lcinit                   cinit        000000
__Lclrtext                 clrtext      000000
__Lcomram                  comram       000000
__Lconfig                  config       300000
__Lconst                   const        000000
__LcstackBANK0             cstackBANK0  000000
__LcstackBANK1             cstackBANK1  000000
__LcstackBANK2             cstackBANK2  000000
__LcstackCOMRAM            cstackCOMRAM 000000
__Ldata                    data         000000
__LdataCOMRAM              dataCOMRAM   000000
__Leeprom_data             eeprom_data  000000
__Lfarbss                  farbss       000000
__Lfardata                 fardata      000000
__Libigdata                ibigdata     000000
__Lidata                   idata        000000
__LidataCOMRAM             idataCOMRAM  000000
__Lidloc                   idloc        200000
__Lifardata                ifardata     000000
__Linit                    init         000000
__Lintcode                 intcode      000000
__Lintcode_body            intcode_body 000000
__Lintcodelo               intcodelo    000000
__Lintentry                intentry     000000
__Lintret                  intret       000000
__Lintsave_regs            intsave_regs 000000
__Lirdata                  irdata       000000
__Lmediumconst             mediumconst  007EB6
__LnvFARRAM                nvFARRAM     000000
__Lnvbit                   nvbit        000000
__Lnvrram                  nvrram       000000
__Lparam                   rparam       000000
__Lpowerup                 powerup      000000
__Lram                     ram          000000
__Lramtop                  ramtop       000800
__Lrbit                    rbit         000000
__Lrbss                    rbss         000000
__Lrdata                   rdata        000000
__Lreset_vec               reset_vec    000000
__Lrparam                  rparam       000000
__Lsfr                     sfr          000000
__Lsmallconst              smallconst   000000
__Lspace_0                 (abs)        000000
__Lspace_1                 (abs)        000000
__Lspace_2                 (abs)        000000
__Lstack                   stack        000000
__Lstruct                  struct       000000
__Ltemp                    temp         000000
__Ltext                    text         000000
__Ltext0                   text0        000000
__Ltext1                   text1        000000
__Ltext10                  text10       000000
__Ltext11                  text11       000000
__Ltext12                  text12       000000
__Ltext13                  text13       000000
__Ltext14                  text14       000000
__Ltext15                  text15       000000
__Ltext16                  text16       000000
__Ltext17                  text17       000000
__Ltext18                  text18       000000
__Ltext19                  text19       000000
__Ltext2                   text2        000000
__Ltext3                   text3        000000
__Ltext4                   text4        000000
__Ltext5                   text5        000000
__Ltext6                   text6        000000
__Ltext7                   text7        000000
__Ltext8                   text8        000000
__Ltext9                   text9        000000
__S0                       (abs)        30000E
__S1                       (abs)        0002C4
__S2                       (abs)        000000
___altoft                  text18       00697A
___altoft@c                cstackCOMRAM 000009
___altoft@exp              cstackCOMRAM 000011
___altoft@sign             cstackCOMRAM 000012
___ftadd                   text17       006D7A
___ftadd@exp1              cstackCOMRAM 00002D
___ftadd@exp2              cstackCOMRAM 00002C
___ftadd@f1                cstackCOMRAM 000022
___ftadd@f2                cstackCOMRAM 000025
___ftadd@sign              cstackCOMRAM 00002B
___ftdiv                   text16       006BA0
___ftdiv@cntr              cstackCOMRAM 00001C
___ftdiv@exp               cstackCOMRAM 000020
___ftdiv@f1                cstackCOMRAM 000013
___ftdiv@f2                cstackCOMRAM 000016
___ftdiv@f3                cstackCOMRAM 00001D
___ftdiv@sign              cstackCOMRAM 000021
___ftpack                  text19       006AF2
___ftpack@arg              cstackCOMRAM 000001
___ftpack@exp              cstackCOMRAM 000004
___ftpack@sign             cstackCOMRAM 000005
___fttol                   text15       006C86
___fttol@exp1              cstackCOMRAM 00000F
___fttol@f1                cstackCOMRAM 000001
___fttol@lval              cstackCOMRAM 00000B
___fttol@sign1             cstackCOMRAM 00000A
___inthi_sp                stack        000000
___intlo_sp                stack        000000
___lwdiv                   text5        00685C
___lwdiv@counter           cstackCOMRAM 000007
___lwdiv@dividend          cstackCOMRAM 000001
___lwdiv@divisor           cstackCOMRAM 000003
___lwdiv@quotient          cstackCOMRAM 000005
___param_bank              (abs)        000000
___rparam_used             (abs)        000001
___sp                      stack        000000
___wmul                    text4        0066EC
___wmul@multiplicand       cstackCOMRAM 000003
___wmul@multiplier         cstackCOMRAM 000001
___wmul@product            cstackCOMRAM 000005
__accesstop                (abs)        000060
__activetblptr             (abs)        000002
__end_of_USART_Init        text14       006A6C
__end_of_USART_SendString  text12       00685C
__end_of_USART_TxChar      text13       0066AE
__end_of___altoft          text18       0069F2
__end_of___ftadd           text17       006F26
__end_of___ftdiv           text16       006C86
__end_of___ftpack          text19       006BA0
__end_of___fttol           text15       006D7A
__end_of___lwdiv           text5        0068AE
__end_of___wmul            text4        006712
__end_of__initialization   cinit        00676A
__end_of_calc_chunk        text9        00716A
__end_of_calc_sha_256      text6        007EB6
__end_of_hash_to_string    text1        00680A
__end_of_hexpowers         mediumconst  007FBF
__end_of_init_buf_state    text8        006910
__end_of_isdigit           text3        0066CC
__end_of_main              text0        006AF2
__end_of_memcpy            text11       0067BA
__end_of_memset            text10       00673E
__end_of_primes            mediumconst  007FB7
__end_of_rotate_right      text7        00697A
__end_of_sprintf           text2        0073B2
__end_of_string            mediumconst  007FCF
__initialization           cinit        00673E
__mediumconst              mediumconst  007EB6
__pbssBANK2                bssBANK2     000283
__pcinit                   cinit        00673E
__pcstackBANK0             cstackBANK0  000060
__pcstackBANK1             cstackBANK1  000100
__pcstackBANK2             cstackBANK2  000200
__pcstackCOMRAM            cstackCOMRAM 000001
__pdataCOMRAM              dataCOMRAM   000040
__pidataCOMRAM             idataCOMRAM  0066CC
__pmediumconst             mediumconst  007EB6
__ptext0                   text0        006A6C
__ptext1                   text1        0067BA
__ptext10                  text10       006712
__ptext11                  text11       006774
__ptext12                  text12       00680A
__ptext13                  text13       0066A2
__ptext14                  text14       0069F2
__ptext15                  text15       006C86
__ptext16                  text16       006BA0
__ptext17                  text17       006D7A
__ptext18                  text18       00697A
__ptext19                  text19       006AF2
__ptext2                   text2        00716A
__ptext3                   text3        0066AE
__ptext4                   text4        0066EC
__ptext5                   text5        00685C
__ptext6                   text6        0073B2
__ptext7                   text7        006910
__ptext8                   text8        0068AE
__ptext9                   text9        006F26
__ramtop                   ramtop       000800
__size_of_USART_Init       (abs)        000000
__size_of_USART_SendString (abs)        000000
__size_of_USART_TxChar     (abs)        000000
__size_of___altoft         (abs)        000000
__size_of___ftadd          (abs)        000000
__size_of___ftdiv          (abs)        000000
__size_of___ftpack         (abs)        000000
__size_of___fttol          (abs)        000000
__size_of___lwdiv          (abs)        000000
__size_of___wmul           (abs)        000000
__size_of_calc_chunk       (abs)        000000
__size_of_calc_sha_256     (abs)        000000
__size_of_hash_to_string   (abs)        000000
__size_of_init_buf_state   (abs)        000000
__size_of_isdigit          (abs)        000000
__size_of_main             (abs)        000000
__size_of_memcpy           (abs)        000000
__size_of_memset           (abs)        000000
__size_of_rotate_right     (abs)        000000
__size_of_sprintf          (abs)        000000
__smallconst               smallconst   000000
_calc_chunk                text9        006F26
_calc_sha_256              text6        0073B2
_hash_to_string            text1        0067BA
_hexpowers                 mediumconst  007FB7
_init_buf_state            text8        0068AE
_isdigit                   text3        0066AE
_isdigit$385               cstackCOMRAM 000002
_main                      text0        006A6C
_memcpy                    text11       006774
_memset                    text10       006712
_primes                    mediumconst  007EB7
_rotate_right              text7        006910
_sprintf                   text2        00716A
_string                    mediumconst  007FBF
calc_chunk@chunk           cstackCOMRAM 00000C
calc_chunk@i               cstackCOMRAM 000018
calc_chunk@left            cstackCOMRAM 000012
calc_chunk@length          cstackCOMRAM 000014
calc_chunk@space_in_chunk  cstackCOMRAM 000016
calc_chunk@state           cstackCOMRAM 00000E
calc_sha_256@F4125         dataCOMRAM   000040
calc_sha_256@aux_hash      cstackBANK2  000200
calc_sha_256@ch            cstackBANK0  0000CC
calc_sha_256@chunk         cstackBANK0  000060
calc_sha_256@h             cstackBANK0  0000A0
calc_sha_256@hash          cstackCOMRAM 00001A
calc_sha_256@i             cstackBANK0  0000EC
calc_sha_256@input         cstackCOMRAM 00001C
calc_sha_256@j             cstackCOMRAM 00003E
calc_sha_256@length        cstackCOMRAM 00001E
calc_sha_256@maj           cstackBANK0  0000D4
calc_sha_256@pointer       cstackBANK0  0000E0
calc_sha_256@s0            cstackBANK0  0000C0
calc_sha_256@s0_113        cstackBANK0  0000D0
calc_sha_256@s1            cstackBANK0  0000C4
calc_sha_256@s1_110        cstackBANK0  0000C8
calc_sha_256@state         cstackBANK0  0000E2
calc_sha_256@temp1         cstackBANK0  0000DC
calc_sha_256@temp2         cstackBANK0  0000D8
calc_sha_256@word          cstackBANK1  000100
end_of_initialization      cinit        00676A
hash_to_string@hash        cstackCOMRAM 000020
hash_to_string@i           cstackCOMRAM 000023
hash_to_string@string      cstackCOMRAM 00001E
init_buf_state@input       cstackCOMRAM 000003
init_buf_state@length      cstackCOMRAM 000005
init_buf_state@state       cstackCOMRAM 000001
intlevel0                  text         000000
intlevel1                  text         000000
intlevel2                  text         000000
intlevel3                  text         000000
isdigit@c                  cstackCOMRAM 000003
main@F4155                 bssBANK2     000283
main@hash                  cstackBANK2  000261
main@hash_string           cstackBANK2  000220
main@pronteiro_string      cstackBANK2  000281
memcpy@d                   cstackCOMRAM 000007
memcpy@d1                  cstackCOMRAM 000001
memcpy@n                   cstackCOMRAM 000005
memcpy@s                   cstackCOMRAM 000009
memcpy@s1                  cstackCOMRAM 000003
memcpy@tmp                 cstackCOMRAM 00000B
memset@c                   cstackCOMRAM 000003
memset@n                   cstackCOMRAM 000005
memset@p                   cstackCOMRAM 000007
memset@p1                  cstackCOMRAM 000001
rotate_right@count         cstackCOMRAM 000005
rotate_right@value         cstackCOMRAM 000001
sprintf@ap                 cstackCOMRAM 000012
sprintf@c                  cstackCOMRAM 00001D
sprintf@ccnt               cstackCOMRAM 000016
sprintf@f                  cstackCOMRAM 00000A
sprintf@flag               cstackCOMRAM 000015
sprintf@idx                cstackCOMRAM 000014
sprintf@prec               cstackCOMRAM 00001A
sprintf@sp                 cstackCOMRAM 000008
sprintf@val                cstackCOMRAM 000018
sprintf@width              cstackCOMRAM 00001B
stackhi                    (abs)        0007FF
stacklo                    (abs)        0002C4
start                      init         000000
start_initialization       cinit        00673E


FUNCTION INFORMATION:

 *************** function _main *****************
 Defined at:
		line 366 in file "main.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
  hash_string    65   32[BANK2 ] unsigned char [65]
  hash           32   97[BANK2 ] unsigned char [32]
  pronteiro_st    2  129[BANK2 ] PTR unsigned char 
		 -> string(16), 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         0       0       0       0       0       0       0       0       0
      Locals:         0       0       0      99       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0       0       0
      Totals:         0       0       0      99       0       0       0       0       0
Total ram usage:       99 bytes
 Hardware stack levels required when called:    3
 This function calls:
		_USART_Init
		_USART_SendString
		_calc_sha_256
		_hash_to_string
 This function is called by:
		Startup code after reset
 This function uses a non-reentrant model


 *************** function _hash_to_string *****************
 Defined at:
		line 349 in file "main.c"
 Parameters:    Size  Location     Type
  string          2   29[COMRAM] PTR unsigned char 
		 -> main@hash_string(65), 
  hash            2   31[COMRAM] PTR const unsigned char 
		 -> main@hash(32), 
 Auto vars:     Size  Location     Type
  i               2   34[COMRAM] unsigned int 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         4       0       0       0       0       0       0       0       0
      Locals:         2       0       0       0       0       0       0       0       0
      Temps:          1       0       0       0       0       0       0       0       0
      Totals:         7       0       0       0       0       0       0       0       0
Total ram usage:        7 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		_sprintf
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _sprintf *****************
 Defined at:
		line 492 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\doprnt.c"
 Parameters:    Size  Location     Type
  sp              2    7[COMRAM] PTR unsigned char 
		 -> main@hash_string(65), 
  f               2    9[COMRAM] PTR const unsigned char 
		 -> STR_1(5), 
 Auto vars:     Size  Location     Type
  idx             1   19[COMRAM] unsigned char 
  tmpval          4    0        struct .
  cp              3    0        PTR const unsigned char 
  width           2   26[COMRAM] int 
  val             2   23[COMRAM] unsigned int 
  ccnt            2   21[COMRAM] int 
  ap              2   17[COMRAM] PTR void [1]
		 -> ?_sprintf(2), 
  len             2    0        unsigned int 
  c               1   28[COMRAM] char 
  prec            1   25[COMRAM] char 
  flag            1   20[COMRAM] unsigned char 
 Return value:  Size  Location     Type
                  2    7[COMRAM] int 
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         6       0       0       0       0       0       0       0       0
      Locals:        12       0       0       0       0       0       0       0       0
      Temps:          4       0       0       0       0       0       0       0       0
      Totals:        22       0       0       0       0       0       0       0       0
Total ram usage:       22 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		___lwdiv
		___wmul
		_isdigit
 This function is called by:
		_hash_to_string
 This function uses a non-reentrant model


 *************** function _isdigit *****************
 Defined at:
		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\isdigit.c"
 Parameters:    Size  Location     Type
  c               1    wreg     unsigned char 
 Auto vars:     Size  Location     Type
  c               1    2[COMRAM] unsigned char 
 Return value:  Size  Location     Type
		None               void
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         0       0       0       0       0       0       0       0       0
      Locals:         2       0       0       0       0       0       0       0       0
      Temps:          1       0       0       0       0       0       0       0       0
      Totals:         3       0       0       0       0       0       0       0       0
Total ram usage:        3 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		_sprintf
 This function uses a non-reentrant model


 *************** function ___wmul *****************
 Defined at:
		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\Umul16.c"
 Parameters:    Size  Location     Type
  multiplier      2    0[COMRAM] unsigned int 
  multiplicand    2    2[COMRAM] unsigned int 
 Auto vars:     Size  Location     Type
  product         2    4[COMRAM] unsigned int 
 Return value:  Size  Location     Type
                  2    0[COMRAM] unsigned int 
 Registers used:
		wreg, status,2, status,0, prodl, prodh
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         4       0       0       0       0       0       0       0       0
      Locals:         2       0       0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0       0       0
      Totals:         6       0       0       0       0       0       0       0       0
Total ram usage:        6 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		_sprintf
 This function uses a non-reentrant model


 *************** function ___lwdiv *****************
 Defined at:
		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lwdiv.c"
 Parameters:    Size  Location     Type
  dividend        2    0[COMRAM] unsigned int 
  divisor         2    2[COMRAM] unsigned int 
 Auto vars:     Size  Location     Type
  quotient        2    4[COMRAM] unsigned int 
  counter         1    6[COMRAM] unsigned char 
 Return value:  Size  Location     Type
                  2    0[COMRAM] unsigned int 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         4       0       0       0       0       0       0       0       0
      Locals:         3       0       0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0       0       0
      Totals:         7       0       0       0       0       0       0       0       0
Total ram usage:        7 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		_sprintf
 This function uses a non-reentrant model


 *************** function _calc_sha_256 *****************
 Defined at:
		line 260 in file "main.c"
 Parameters:    Size  Location     Type
  hash            2   25[COMRAM] PTR unsigned char 
		 -> main@hash(32), 
  input           2   27[COMRAM] PTR const unsigned char 
		 -> string(16), 
  length          2   29[COMRAM] unsigned int 
 Auto vars:     Size  Location     Type
  temp1           4  124[BANK0 ] const unsigned long 
  temp2           4  120[BANK0 ] const unsigned long 
  maj             4  116[BANK0 ] const unsigned long 
  s0              4  112[BANK0 ] const unsigned long 
  ch              4  108[BANK0 ] const unsigned long 
  s1              4  104[BANK0 ] const unsigned long 
  s1              4  100[BANK0 ] const unsigned long 
  s0              4   96[BANK0 ] const unsigned long 
  word          256    0[BANK1 ] unsigned long [64]
  aux_hash       32    0[BANK2 ] unsigned long [8]
  pointer         2  128[BANK0 ] PTR const unsigned char 
		 -> calc_sha_256@chunk(64), 
  chunk          64    0[BANK0 ] unsigned char [64]
  h              32   64[BANK0 ] unsigned long [8]
  state          10  130[BANK0 ] struct buffer_state
  i               2  140[BANK0 ] int 
  j               2   61[COMRAM] int 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         6       0       0       0       0       0       0       0       0
      Locals:         2     142     256      32       0       0       0       0       0
      Temps:         30       0       0       0       0       0       0       0       0
      Totals:        38     142     256      32       0       0       0       0       0
Total ram usage:      468 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		_calc_chunk
		_init_buf_state
		_memset
		_rotate_right
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _rotate_right *****************
 Defined at:
		line 193 in file "main.c"
 Parameters:    Size  Location     Type
  value           4    0[COMRAM] unsigned long 
  count           2    4[COMRAM] unsigned int 
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  4    0[COMRAM] unsigned long 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         6       0       0       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0       0       0
      Temps:          9       0       0       0       0       0       0       0       0
      Totals:        15       0       0       0       0       0       0       0       0
Total ram usage:       15 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		_calc_sha_256
 This function uses a non-reentrant model


 *************** function _init_buf_state *****************
 Defined at:
		line 184 in file "main.c"
 Parameters:    Size  Location     Type
  state           2    0[COMRAM] PTR struct buffer_state
		 -> calc_sha_256@state(10), 
  input           2    2[COMRAM] PTR const void 
		 -> string(16), 
  length          2    4[COMRAM] unsigned int 
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         6       0       0       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0       0       0
      Totals:         6       0       0       0       0       0       0       0       0
Total ram usage:        6 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		_calc_sha_256
 This function uses a non-reentrant model


 *************** function _calc_chunk *****************
 Defined at:
		line 198 in file "main.c"
 Parameters:    Size  Location     Type
  chunk           2   11[COMRAM] PTR unsigned char 
		 -> calc_sha_256@chunk(64), 
  state           2   13[COMRAM] PTR struct buffer_state
		 -> calc_sha_256@state(10), 
 Auto vars:     Size  Location     Type
  i               2   23[COMRAM] int 
  length          2   19[COMRAM] unsigned int 
  left            2   17[COMRAM] const unsigned int 
  space_in_chu    2   21[COMRAM] unsigned int 
 Return value:  Size  Location     Type
                  2   11[COMRAM] int 
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         4       0       0       0       0       0       0       0       0
      Locals:         8       0       0       0       0       0       0       0       0
      Temps:          2       0       0       0       0       0       0       0       0
      Totals:        14       0       0       0       0       0       0       0       0
Total ram usage:       14 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		_memcpy
		_memset
 This function is called by:
		_calc_sha_256
 This function uses a non-reentrant model


 *************** function _memset *****************
 Defined at:
		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\memset.c"
 Parameters:    Size  Location     Type
  p1              2    0[COMRAM] PTR void 
		 -> calc_sha_256@word(256), calc_sha_256@chunk(64), 
  c               2    2[COMRAM] int 
  n               2    4[COMRAM] unsigned int 
 Auto vars:     Size  Location     Type
  p               2    6[COMRAM] PTR unsigned char 
		 -> calc_sha_256@word(256), calc_sha_256@chunk(64), 
 Return value:  Size  Location     Type
                  2    0[COMRAM] PTR void 
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         6       0       0       0       0       0       0       0       0
      Locals:         2       0       0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0       0       0
      Totals:         8       0       0       0       0       0       0       0       0
Total ram usage:        8 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		_calc_chunk
		_calc_sha_256
 This function uses a non-reentrant model


 *************** function _memcpy *****************
 Defined at:
		line 27 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\memcpy.c"
 Parameters:    Size  Location     Type
  d1              2    0[COMRAM] PTR void 
		 -> calc_sha_256@chunk(64), 
  s1              2    2[COMRAM] PTR const void 
		 -> string(16), 
  n               2    4[COMRAM] unsigned int 
 Auto vars:     Size  Location     Type
  s               2    8[COMRAM] PTR const unsigned char 
		 -> string(16), 
  d               2    6[COMRAM] PTR unsigned char 
		 -> calc_sha_256@chunk(64), 
  tmp             1   10[COMRAM] unsigned char 
 Return value:  Size  Location     Type
                  2    0[COMRAM] PTR void 
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         6       0       0       0       0       0       0       0       0
      Locals:         5       0       0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0       0       0
      Totals:        11       0       0       0       0       0       0       0       0
Total ram usage:       11 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		_calc_chunk
 This function uses a non-reentrant model


 *************** function _USART_SendString *****************
 Defined at:
		line 146 in file "main.c"
 Parameters:    Size  Location     Type
  out             2    1[COMRAM] PTR const unsigned char 
		 -> STR_3(11), STR_2(14), main@hash_string(65), 
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         2       0       0       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0       0       0
      Totals:         2       0       0       0       0       0       0       0       0
Total ram usage:        2 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		_USART_TxChar
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _USART_TxChar *****************
 Defined at:
		line 136 in file "main.c"
 Parameters:    Size  Location     Type
  out             1    wreg     unsigned char 
 Auto vars:     Size  Location     Type
  out             1    0[COMRAM] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         0       0       0       0       0       0       0       0       0
      Locals:         1       0       0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0       0       0
      Totals:         1       0       0       0       0       0       0       0       0
Total ram usage:        1 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		_USART_SendString
 This function uses a non-reentrant model


 *************** function _USART_Init *****************
 Defined at:
		line 122 in file "main.c"
 Parameters:    Size  Location     Type
  baud_rate       4   45[COMRAM] long 
 Auto vars:     Size  Location     Type
  temp            3   49[COMRAM] float 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         4       0       0       0       0       0       0       0       0
      Locals:         3       0       0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0       0       0
      Totals:         7       0       0       0       0       0       0       0       0
Total ram usage:        7 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		___altoft
		___ftadd
		___ftdiv
		___fttol
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function ___fttol *****************
 Defined at:
		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\fttol.c"
 Parameters:    Size  Location     Type
  f1              3    0[COMRAM] float 
 Auto vars:     Size  Location     Type
  lval            4   10[COMRAM] unsigned long 
  exp1            1   14[COMRAM] unsigned char 
  sign1           1    9[COMRAM] unsigned char 
 Return value:  Size  Location     Type
                  4    0[COMRAM] long 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         4       0       0       0       0       0       0       0       0
      Locals:         6       0       0       0       0       0       0       0       0
      Temps:          5       0       0       0       0       0       0       0       0
      Totals:        15       0       0       0       0       0       0       0       0
Total ram usage:       15 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		_USART_Init
 This function uses a non-reentrant model


 *************** function ___ftdiv *****************
 Defined at:
		line 54 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftdiv.c"
 Parameters:    Size  Location     Type
  f1              3   18[COMRAM] float 
  f2              3   21[COMRAM] float 
 Auto vars:     Size  Location     Type
  f3              3   28[COMRAM] float 
  sign            1   32[COMRAM] unsigned char 
  exp             1   31[COMRAM] unsigned char 
  cntr            1   27[COMRAM] unsigned char 
 Return value:  Size  Location     Type
                  3   18[COMRAM] float 
 Registers used:
		wreg, status,2, status,0, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         6       0       0       0       0       0       0       0       0
      Locals:         6       0       0       0       0       0       0       0       0
      Temps:          3       0       0       0       0       0       0       0       0
      Totals:        15       0       0       0       0       0       0       0       0
Total ram usage:       15 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		___ftpack
 This function is called by:
		_USART_Init
 This function uses a non-reentrant model


 *************** function ___ftadd *****************
 Defined at:
		line 86 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftadd.c"
 Parameters:    Size  Location     Type
  f1              3   33[COMRAM] float 
  f2              3   36[COMRAM] float 
 Auto vars:     Size  Location     Type
  exp1            1   44[COMRAM] unsigned char 
  exp2            1   43[COMRAM] unsigned char 
  sign            1   42[COMRAM] unsigned char 
 Return value:  Size  Location     Type
                  3   33[COMRAM] float 
 Registers used:
		wreg, status,2, status,0, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         6       0       0       0       0       0       0       0       0
      Locals:         3       0       0       0       0       0       0       0       0
      Temps:          3       0       0       0       0       0       0       0       0
      Totals:        12       0       0       0       0       0       0       0       0
Total ram usage:       12 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		___ftpack
 This function is called by:
		_USART_Init
 This function uses a non-reentrant model


 *************** function ___altoft *****************
 Defined at:
		line 42 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\altoft.c"
 Parameters:    Size  Location     Type
  c               4    8[COMRAM] long 
 Auto vars:     Size  Location     Type
  sign            1   17[COMRAM] unsigned char 
  exp             1   16[COMRAM] unsigned char 
 Return value:  Size  Location     Type
                  3    8[COMRAM] float 
 Registers used:
		wreg, status,2, status,0, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         4       0       0       0       0       0       0       0       0
      Locals:         2       0       0       0       0       0       0       0       0
      Temps:          4       0       0       0       0       0       0       0       0
      Totals:        10       0       0       0       0       0       0       0       0
Total ram usage:       10 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		___ftpack
 This function is called by:
		_USART_Init
 This function uses a non-reentrant model


 *************** function ___ftpack *****************
 Defined at:
		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\float.c"
 Parameters:    Size  Location     Type
  arg             3    0[COMRAM] unsigned um
  exp             1    3[COMRAM] unsigned char 
  sign            1    4[COMRAM] unsigned char 
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  3    0[COMRAM] float 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         5       0       0       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0       0       0
      Temps:          3       0       0       0       0       0       0       0       0
      Totals:         8       0       0       0       0       0       0       0       0
Total ram usage:        8 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		___altoft
		___ftadd
		___ftdiv
 This function uses a non-reentrant model



MODULE INFORMATION

Module		Function		Class		Link	Load	Size
C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\float.c
		___ftpack      		CODE           	6AF2	0000	175

C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\float.c estimated size: 175

C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\doprnt.c
		_sprintf       		CODE           	716A	0000	585

C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\doprnt.c estimated size: 585

C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\Umul16.c
		___wmul        		CODE           	66EC	0000	39

C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\Umul16.c estimated size: 39

C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\isdigit.c
		_isdigit       		CODE           	66AE	0000	31

C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\isdigit.c estimated size: 31

C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\memcpy.c
		_memcpy        		CODE           	6774	0000	71

C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\memcpy.c estimated size: 71

C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftdiv.c
		___ftdiv       		CODE           	6BA0	0000	231

C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftdiv.c estimated size: 231

shared
		_string        		MEDIUMCONST    	7FBF	0000	17
		__initialization		CODE           	673E	0000	45
		_primes        		MEDIUMCONST    	7EB7	0000	257
		_hexpowers     		MEDIUMCONST    	7FB7	0000	9

shared estimated size: 328

C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\fttol.c
		___fttol       		CODE           	6C86	0000	245

C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\fttol.c estimated size: 245

C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lwdiv.c
		___lwdiv       		CODE           	685C	0000	83

C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lwdiv.c estimated size: 83

C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftadd.c
		___ftadd       		CODE           	6D7A	0000	429

C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftadd.c estimated size: 429

main.c
		_hash_to_string		CODE           	67BA	0000	81
		_rotate_right  		CODE           	6910	0000	107
		_main          		CODE           	6A6C	0000	135
		_calc_chunk    		CODE           	6F26	0000	581
		_USART_TxChar  		CODE           	66A2	0000	13
		_calc_sha_256  		CODE           	73B2	0000	2821
		_init_buf_state		CODE           	68AE	0000	99
		_USART_SendString		CODE           	680A	0000	83
		_USART_Init    		CODE           	69F2	0000	123

main.c estimated size: 4043

C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\altoft.c
		___altoft      		CODE           	697A	0000	121

C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\altoft.c estimated size: 121

C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\memset.c
		_memset        		CODE           	6712	0000	45

C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\memset.c estimated size: 45

